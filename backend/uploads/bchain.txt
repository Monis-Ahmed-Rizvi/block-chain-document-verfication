├── .env
    SECRET_KEY=your-secret-key-here
    DATABASE_URL=postgresql://user:password@localhost/dbname
├── .gitignore
├── app
│   └── __init__.py
│       from flask import Flask
│       from flask_sqlalchemy import SQLAlchemy
│       from flask_migrate import Migrate
│       from flask_jwt_extended import JWTManager
│       from flask_cors import CORS
│       
│       db = SQLAlchemy()
│       migrate = Migrate()
│       jwt = JWTManager()
│       
│       def create_app(config_name='default'):
│           app = Flask(__name__)
│           
│           # Config setup will go here
│           
│           db.init_app(app)
│           migrate.init_app(app, db)
│           jwt.init_app(app)
│           CORS(app)
│       
│           return app
├── config
│   └── __init__.py
│       import os
│       from dotenv import load_dotenv
│       
│       load_dotenv()
│       
│       class Config:
│           SECRET_KEY = os.environ.get('SECRET_KEY') or 'you-will-never-guess'
│           SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL') or \
│               f"sqlite:///{os.path.join(os.path.abspath(os.path.dirname(__file__)), 'app.db')}"
│           SQLALCHEMY_TRACK_MODIFICATIONS = False
│       
│       class DevelopmentConfig(Config):
│           DEBUG = True
│       
│       class TestingConfig(Config):
│           TESTING = True
│       
│       class ProductionConfig(Config):
│           pass
│       
│       config = {
│           'development': DevelopmentConfig,
│           'testing': TestingConfig,
│           'production': ProductionConfig,
│           'default': DevelopmentConfig
│       }
├── README.md
├── requirements.txt
    aiohttp==3.9.5
    aiosignal==1.3.1
    alembic==1.13.2
    async-timeout==4.0.3
    attrs==23.2.0
    bitarray==2.9.2
    blinker==1.8.2
    certifi==2024.7.4
    charset-normalizer==3.3.2
    ckzg==1.0.2
    click==8.1.7
    colorama==0.4.6
    cytoolz==0.12.3
    eth-abi==5.1.0
    eth-account==0.11.2
    eth-hash==0.7.0
    eth-keyfile==0.8.1
    eth-keys==0.5.1
    eth-rlp==1.0.1
    eth-typing==4.4.0
    eth-utils==4.1.1
    flask==3.0.3
    Flask-Cors==4.0.1
    Flask-JWT-Extended==4.6.0
    Flask-Migrate==4.0.7
    flask-sqlalchemy==3.1.1
    frozenlist==1.4.1
    greenlet==3.0.3
    gunicorn==22.0.0
    hexbytes==0.3.1
    idna==3.7
    importlib-metadata==8.0.0
    importlib-resources==6.4.0
    itsdangerous==2.2.0
    jinja2==3.1.4
    jsonschema==4.23.0
    jsonschema-specifications==2023.12.1
    lru-dict==1.2.0
    Mako==1.3.5
    MarkupSafe==2.1.5
    multidict==6.0.5
    packaging==24.1
    parsimonious==0.10.0
    pkgutil-resolve-name==1.3.10
    protobuf==5.27.2
    psycopg2-binary==2.9.9
    pycryptodome==3.20.0
    PyJWT==2.8.0
    python-dotenv==1.0.1
    pyunormalize==15.1.0
    pywin32==306
    referencing==0.35.1
    regex==2024.5.15
    requests==2.32.3
    rlp==4.0.1
    rpds-py==0.19.0
    SQLAlchemy==2.0.31
    toolz==0.12.1
    typing-extensions==4.12.2
    urllib3==2.2.2
    web3==6.20.0
    websockets==12.0
    werkzeug==3.0.3
    yarl==1.9.4
    zipp==3.19.2
├── run.py
    from app import create_app
    
    app = create_app()
    
    if __name__ == '__main__':
        app.run()
└── tests
